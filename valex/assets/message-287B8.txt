import requests
import time
import json
import random
from datetime import datetime

API_URL = "https://api.voxlis.net/counts.php"
API_KEY = "MI3M9GMG93MGMG8NBBN23NBN37N824NBN"

USER_AGENTS = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Edg/122.0.0.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:134.0) Gecko/20100101 Firefox/134.0",
    "Mozilla/5.0 (X11; Linux x86_64; rv:123.0) Gecko/20100101 Firefox/123.0",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 OPR/108.0.0.0",
    "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:123.0) Gecko/20100101 Firefox/123.0",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.3 Safari/605.1.15",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Vivaldi/6.5.3206.53",
    "Mozilla/5.0 (iPhone; CPU iPhone OS 17_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.3 Mobile/15E148 Safari/604.1",
    "Mozilla/5.0 (iPad; CPU OS 17_3_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/17.3 Mobile/15E148 Safari/604.1",
    "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Brave/122.0.0.0",
    "Mozilla/5.0 (Linux; Android 14; SM-S918B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Mobile Safari/537.36",
    "Mozilla/5.0 (Linux; Android 14; Pixel 8) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Mobile Safari/537.36",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36 Whale/3.24.223.18"
]

BUTTON_TYPES = ["website", "price"]

def generate_headers(user_agent):
    return {
        "User-Agent": user_agent,
        "Accept": "*/*",
        "Accept-Language": "en-US,en;q=0.5",
        "Accept-Encoding": "gzip, deflate, br, zstd",
        "Referer": "https://voxlis.net/",
        "Content-Type": "application/json",
        "X-API-KEY": API_KEY,
        "Origin": "https://voxlis.net",
        "DNT": "1",
        "Sec-GPC": "1",
        "Connection": "keep-alive",
        "Sec-Fetch-Dest": "empty",
        "Sec-Fetch-Mode": "cors",
        "Sec-Fetch-Site": "same-site",
        "Priority": "u=0",
        "TE": "trailers"
    }

def generate_payload(user_agent):
    timestamp = int(datetime.now().timestamp() * 1000)
    return {
        "action": "track_click",
        "item": "Valex",
        "button_type": random.choice(BUTTON_TYPES),  
        "timestamp": timestamp,
        "user_agent": user_agent,
        "referrer": "direct"
    }

def send_request():
    try:
        user_agent = random.choice(USER_AGENTS)
        headers = generate_headers(user_agent)
        payload = generate_payload(user_agent)
        
        response = requests.post(
            API_URL,
            headers=headers,
            json=payload
        )
        
        print(f"Request sent! Status: {response.status_code}")
        print(f"Button Type: {payload['button_type']}")
        print(f"User-Agent: {user_agent}")
        print(f"Payload: {json.dumps(payload, indent=2)}")
        print(f"Response: {response.text}")
        print("-" * 50)
        
    except Exception as e:
        print(f"Error sending request: {e}")

def simulate_clicks():
    num_clicks = random.randint(2, 5)
    print(f"\nSimulating {num_clicks} clicks...")
    
    for i in range(num_clicks):
        send_request()
        if i < num_clicks - 1:
            time.sleep(random.uniform(0.5, 2))

def main():
    print("Starting Voxlis Bot...")
    print("Will simulate 2-5 clicks every minute")
    
    while True:
        simulate_clicks()
        time.sleep(60)

if __name__ == "__main__":
    main()
